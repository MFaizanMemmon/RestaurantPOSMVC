@model RestaurantManagementUI.Models.LoginViewModel
@{
    Layout = null;
    ViewBag.Title = "Login";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    body {
        background: linear-gradient(135deg, #3b82f6, #0ea5e9, #14b8a6);
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: "Poppins", sans-serif;
        overflow: hidden;
    }

    .login-card {
        width: 380px;
        background: #ffffff;
        border-radius: 20px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        animation: slideIn 0.7s ease;
    }

    @@keyframes slideIn {
        from

    {
        transform: translateY(-50px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }

    .login-header {
        background: linear-gradient(135deg, #2563eb, #0ea5e9);
        color: #fff;
        text-align: center;
        padding: 25px;
        position: relative;
    }

        .login-header h4 {
            font-weight: 600;
            margin-bottom: 0;
            letter-spacing: 1px;
        }

        .login-header::after {
            content: "";
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 4px;
            background: #14b8a6;
            border-radius: 10px;
        }

    .form-control {
        border-radius: 10px;
        border: 1px solid #d1d5db;
        padding: 10px 15px;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: #0ea5e9;
            box-shadow: 0 0 5px rgba(14, 165, 233, 0.4);
        }

    .btn-primary {
        background: linear-gradient(135deg, #2563eb, #0ea5e9);
        border: none;
        border-radius: 10px;
        padding: 10px;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #1e3a8a, #0c4a6e);
            transform: scale(1.03);
        }

    .alert-danger {
        border-radius: 10px;
        background-color: #fee2e2;
        color: #b91c1c;
    }

    .brand-text {
        font-weight: 700;
        color: #fff;
        font-size: 1.8rem;
        letter-spacing: 1px;
        text-align: center;
        margin-bottom: 1rem;
        text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .pulse-shadow {
        animation: pulseGlow 2s infinite;
    }

    @@keyframes pulseGlow {
        0%

    {
        box-shadow: 0 0 0 rgba(14, 165, 233, 0.4);
    }

    50% {
        box-shadow: 0 0 20px rgba(14, 165, 233, 0.7);
    }

    100% {
        box-shadow: 0 0 0 rgba(14, 165, 233, 0.4);
    }

    }
</style>

<div>
    <div class="brand-text">🍽️ Pulse Restaurant</div>

    <div class="login-card pulse-shadow">
        <div class="login-header">
            <h4><i class="bi bi-lock-fill me-2"></i> Login</h4>
        </div>
        <div class="card-body p-4">
            @using (Html.BeginForm("Login", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    @Html.LabelFor(m => m.Username, new { @class = "form-label fw-semibold" })
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Enter username" })
                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger small" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Password, new { @class = "form-label fw-semibold" })
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger small" })
                </div>

                @if (!string.IsNullOrEmpty(Model?.ErrorMessage))
                {
                    <div class="alert alert-danger text-center py-2">
                        <i class="bi bi-exclamation-triangle-fill me-1"></i>
                        @Model.ErrorMessage
                    </div>
                }

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-box-arrow-in-right me-1"></i> Login
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

