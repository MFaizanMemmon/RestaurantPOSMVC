@{
    ViewData["Title"] = "Product";
}

<div class="mt-4">
    <div class="d-flex justify-content-between align-items-center mb-5">
        <h1 class="mb-0">Products List</h1>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#productModal">
            <i class="bi bi-plus-circle me-1"></i> Add Product
        </button>
    </div>

    <table id="productTable" class="table table-hover mt-5">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Menu Name</th>
                <th>Price</th>
                <th>Category</th>
                <th>Picture</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <!-- Sample 50 products -->
            <script>
                const categories = ["Appetizer", "Main Course", "Dessert", "Beverages", "Salads"];
                for (let i = 1; i <= 50; i++) {
                    const name = `Menu ${i}`;
                    const price = (Math.floor(Math.random() * 500) + 100).toFixed(2);
                    const category = categories[Math.floor(Math.random() * categories.length)];
                    const picture = `<img src="https://via.placeholder.com/50" alt="Menu Image" class="img-thumbnail">`;

                    document.write(`
                        <tr>
                            <td>${i}</td>
                            <td>${name}</td>
                            <td>$${price}</td>
                            <td>${category}</td>
                            <td>${picture}</td>
                            <td>
                                <button class="btn btn-sm btn-success" onclick="editRow(this)">Edit</button>
                                <button class="btn btn-sm btn-danger" onclick="deleteRow(this)">Delete</button>
                            </td>
                        </tr>
                    `);
                }
            </script>
        </tbody>
    </table>
</div>

<!-- Add/Edit Product Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="productModalLabel">Add New Product</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="productForm">
                    <div class="mb-3">
                        <label for="menuName" class="form-label">Menu Name</label>
                        <input type="text" class="form-control" id="menuName" placeholder="Enter menu name" required>
                    </div>
                    <div class="mb-3">
                        <label for="menuPrice" class="form-label">Price</label>
                        <input type="number" class="form-control" id="menuPrice" placeholder="Enter price" required>
                    </div>
                    <div class="mb-3">
                        <label for="menuCategory" class="form-label">Category</label>
                        <select class="form-select" id="menuCategory" required>
                            <option value="">Select Category</option>
                            <option>Appetizer</option>
                            <option>Main Course</option>
                            <option>Dessert</option>
                            <option>Beverages</option>
                            <option>Salads</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="menuPicture" class="form-label">Picture</label>
                        <input type="file" class="form-control" id="menuPicture" accept="image/*">
                        <img id="menuPicturePreview" src="#" alt="Preview" class="img-thumbnail mt-2" style="display:none; max-height:100px;">
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary" form="productForm">Save Product</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Initialize DataTable
        $(document).ready(function () {
            $('#productTable').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    { extend: 'copy', className: 'btn btn-secondary' },
                    { extend: 'csv', className: 'btn btn-success' },
                    { extend: 'excel', className: 'btn btn-primary' },
                    { extend: 'pdf', className: 'btn btn-danger' },
                    { extend: 'print', className: 'btn btn-info' }
                ],
                pageLength: 10,
                lengthMenu: [5, 10, 25, 50],
                language: {
                    search: "Search Product:",
                    lengthMenu: "Show _MENU_ entries"
                },
                pagingType: "simple_numbers",
                renderer: 'bootstrap'
            });
        });

        // Edit/Delete functions
        function editRow(button) {
            const row = button.closest("tr");
            const name = row.cells[1].innerText;
            const price = row.cells[2].innerText.replace("$", "");
            const category = row.cells[3].innerText;

            document.getElementById("menuName").value = name;
            document.getElementById("menuPrice").value = price;
            document.getElementById("menuCategory").value = category;
            document.getElementById("productModalLabel").innerText = "Edit Product";

            var modal = new bootstrap.Modal(document.getElementById('productModal'));
            modal.show();
        }

        function deleteRow(button) {
            if (confirm("Are you sure you want to delete this product?")) {
                const row = button.closest("tr");
                row.remove();
            }
        }

        // Reset modal on close
        document.getElementById('productModal').addEventListener('hidden.bs.modal', function () {
            document.getElementById("productForm").reset();
            document.getElementById("productModalLabel").innerText = "Add New Product";
        });

                // Show image preview on file select
        document.getElementById("menuPicture").addEventListener("change", function (event) {
            const file = event.target.files[0];
            const preview = document.getElementById("menuPicturePreview");

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = "block"; // show the image
                }
                reader.readAsDataURL(file);
            } else {
                preview.src = "#";
                preview.style.display = "none";
            }
        });

    </script>
}
